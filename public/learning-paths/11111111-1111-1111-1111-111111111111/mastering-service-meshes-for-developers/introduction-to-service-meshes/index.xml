<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction to Service Meshes on Layer5 Academy</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/</link><description>Recent content in Introduction to Service Meshes on Layer5 Academy</description><generator>Hugo</generator><language>en</language><atom:link href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started with Istio</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/</guid><description>&lt;div class="chapter-content">
 
&lt;h3 id="setup-istio" class="heading-link">
 &lt;strong>Setup Istio&lt;/strong>
 &lt;a href="#setup-istio" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>Now that we have a Kubernetes cluster and Meshery, we are ready to download and deploy Istio resources.&lt;/p>

&lt;h3 id="steps" class="heading-link">
 &lt;strong>Steps&lt;/strong>
 &lt;a href="#steps" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>&lt;a href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/#1">Install Istio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/#2">Verify install&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Optional (manual install of Istio):&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/#1.1">Download Istio resources&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/#1.2">Setup &lt;code>istioctl&lt;/code>&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/getting-started/#1.3">Install istio&lt;/a>&lt;/li>
&lt;/ol>

&lt;h4 id="install-istio" class="heading-link">
 &lt;strong>Install Istio&lt;/strong>
 &lt;a href="#install-istio" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h4>
&lt;p>Using Meshery, select &lt;code>Istio&lt;/code> from the &lt;code>Lifecycle&lt;/code> menu.&lt;/p>
&lt;p>In the Istio management page:&lt;/p></description></item><item><title>Deploy a Sample Application</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/deploy-an-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/deploy-an-application/</guid><description>&lt;div class="chapter-content">
 &lt;p>To play with Istio and demonstrate some of it&amp;rsquo;s capabilities, you will deploy the example BookInfo application, which is included the Istio package.&lt;/p>

&lt;h3 id="what-is-the-bookinfo-application" class="heading-link">
 &lt;strong>What is the Bookinfo Application&lt;/strong>
 &lt;a href="#what-is-the-bookinfo-application" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;br />
This application is a polyglot composition of microservices are written in different
languages and sample BookInfo application displays information about a book, similar to a
single catalog entry of an online book store. Displayed on the page is a description of
the book, book details (ISBN, number of pages, and so on), and a few book reviews.
&lt;p>The end-to-end architecture of the application is shown in the figure.&lt;/p></description></item><item><title>Exposing services through Istio Ingress Gateway</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/expose-services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/expose-services/</guid><description>&lt;div class="chapter-content">
 &lt;p>The components deployed on the service mesh by default are not exposed outside the cluster. An Ingress Gateway is deployed as a Kubernetes service of type LoadBalancer (or NodePort). To make Bookinfo accessible external to the cluster, you have to create an &lt;code>Istio Gateway&lt;/code> for the Bookinfo application and also define an &lt;code>Istio VirtualService&lt;/code> with the routes we need.&lt;/p>

&lt;h3 id="inspecting-the-istio-ingress-gateway" class="heading-link">
 &lt;strong>Inspecting the Istio Ingress Gateway&lt;/strong>
 &lt;a href="#inspecting-the-istio-ingress-gateway" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;br />
The ingress gateway gets exposed as a normal Kubernetes service of type LoadBalancer (or NodePort):
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>kubectl get svc istio-ingressgateway -n istio-system -o yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Because the Istio Ingress Gateway is an Envoy Proxy you can inspect it using the admin routes. First find the name of the istio-ingressgateway:&lt;/p></description></item><item><title>Observability</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/observability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/observability/</guid><description>&lt;div class="chapter-content">
 
&lt;h3 id="install-telemetry-add-ons" class="heading-link">
 &lt;strong>Install Telemetry Add-ons&lt;/strong>
 &lt;a href="#install-telemetry-add-ons" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>Using Meshery, install Istio telemetry add-ons. In the Istio management page:&lt;/p>
&lt;ol>
&lt;li>Click the (+) icon on the &lt;code>Apply Service Mesh Configuration&lt;/code> card.&lt;/li>
&lt;li>Select each of the following add-ons:
&lt;ol>
&lt;li>&lt;a href="https://prometheus.io/">Prometheus&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://grafana.com/">Grafana&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jaegertracing.io/">Jaeger&lt;/a>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>






&lt;div class="md__image">
 &lt;img id="[167 349 105 449 275 59]" src="https://cloud.layer5.io/academy/11111111-1111-1111-1111-111111111111/mastering-service-mesh/istio-addons.webp" onclick="openModal(this.id)" alt="istio-addons" 
 class="md-image-responsive" />
&lt;/div>&lt;/p>
&lt;p>You will use Prometheus and Grafana for collecting and viewing metrics and &lt;a href="https://www.jaegertracing.io/">Jaeger&lt;/a> collecting and viewing distributed traces. Expose each add-on external to the cluster. Each the service network typs are set to &amp;ldquo;LoadBalancer&amp;rdquo;.&lt;/p></description></item><item><title>Request Routing and Canary Testing</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/routing-and-canary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/routing-and-canary/</guid><description>&lt;div class="chapter-content">
 &lt;p>In this chapter, we are going to get our hands on some of the traffic management capabilities of Istio.&lt;/p>

&lt;h3 id="apply-default-destination-rules" class="heading-link">
 &lt;strong>Apply default destination rules&lt;/strong>
 &lt;a href="#apply-default-destination-rules" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>Before we start playing with Istio&amp;rsquo;s traffic management capabilities, we need to define the available versions of the deployed services. In Istio parlance, versions are called subsets. Subsets are defined in destination rules.&lt;/p>
&lt;p>Run the following in the custom yaml section to create default destination rules for the Bookinfo services:&lt;/p></description></item><item><title>Fault Injection</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/fault-injection/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/fault-injection/</guid><description>&lt;div class="chapter-content">
 &lt;p>In this chapter we will learn how to test the resiliency of an application by injecting systematic faults.
Before we start, we will need to reset the virtual services.&lt;/p>
&lt;p>Using Meshery, navigate to the Istio management page:&lt;/p>
&lt;ol>
&lt;li>Enter &lt;code>default&lt;/code> in the &lt;code>Namespace&lt;/code> field.&lt;/li>
&lt;li>Click the (+) icon on the &lt;code>Apply Custom Configuration&lt;/code> card and paste the configuration below.&lt;/li>
&lt;/ol>
&lt;p>Config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">networking.istio.io/v1alpha3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">VirtualService&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">reviews&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hosts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">reviews&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">route&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">destination&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">host&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">reviews&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">subset&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="inject-a-route-rule-to-create-a-fault-using-http-delay" class="heading-link">
 &lt;strong>Inject a route rule to create a fault using HTTP delay&lt;/strong>
 &lt;a href="#inject-a-route-rule-to-create-a-fault-using-http-delay" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>To start, we will inject a 7s delay for accessing the ratings service for a user &lt;code>jason&lt;/code>. reviews v2 service has a 10s hard-coded connection timeout for its calls to the ratings service configured globally.&lt;/p></description></item><item><title>Mutual TLS &amp; Identity Verification</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/mutual-tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/mutual-tls/</guid><description>&lt;div class="chapter-content">
 &lt;p>Istio provides transparent mutual TLS to services inside the service mesh where both the client and the server authenticate each others&amp;rsquo; certificates as part of the TLS handshake. As part of this course, we have deployed Istio with mTLS.&lt;/p>
&lt;p>By default istio sets mTLS in &lt;code>PERMISSIVE&lt;/code> mode which allows plain text traffic to be sent and accepted by a mesh. We first disallow plain text traffic using &lt;code>PeerAuthentication&lt;/code> and setting mTLS mode to STRICT.&lt;/p></description></item><item><title>Circuit Breaking</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/circuit-breaking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/circuit-breaking/</guid><description>&lt;div class="chapter-content">
 &lt;p>In this chapter we will configure circuit breaking using Istio. Circuit breaking allows developers to write applications that limit the impact of failures, latency spikes, and other undesirable effects of network peculiarities. This task will show how to configure circuit breaking for connections, requests, and outlier detection.&lt;/p>

&lt;h3 id="preparing-for-circuit-breaking" class="heading-link">
 &lt;strong>Preparing for circuit breaking&lt;/strong>
 &lt;a href="#preparing-for-circuit-breaking" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;br />
&lt;p>Before we can configure circuit breaking, please try to access the &lt;code>product page&lt;/code> app from within &lt;code>Meshery&lt;/code> to ensure all the calls are making it through &lt;strong>without&lt;/strong> errors as we did in &lt;a href="https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/observability/">Observability chapter&lt;/a>&lt;/p></description></item><item><title>Conclusion</title><link>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/conclusion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/11111111-1111-1111-1111-111111111111/mastering-service-meshes-for-developers/introduction-to-service-meshes/conclusion/</guid><description>&lt;div class="chapter-content">
 &lt;br />

&lt;h3 id="congratulations" class="heading-link">
 &lt;strong>Congratulations!&lt;/strong>
 &lt;a href="#congratulations" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>You have successfully completed the course on &lt;strong>&amp;ldquo;Introduction to service meshes - Hands on&amp;rdquo;&lt;/strong> using &lt;strong>Istio&lt;/strong>.&lt;/p>
&lt;/div></description></item></channel></rss>