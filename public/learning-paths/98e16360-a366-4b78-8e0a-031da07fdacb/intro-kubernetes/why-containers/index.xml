<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Why Containers? on Layer5 Academy</title><link>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/</link><description>Recent content in Why Containers? on Layer5 Academy</description><generator>Hugo</generator><language>en</language><atom:link href="https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/index.xml" rel="self" type="application/rss+xml"/><item><title>Experiences we want to change!</title><link>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/experiences-we-want-to-change/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/experiences-we-want-to-change/</guid><description>&lt;h3 id="why-containers" class="heading-link">
 &lt;strong>Why Containers?&lt;/strong>
 &lt;a href="#why-containers" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>Many people have a complex job building, testing, and running systems based on old concepts and technology in today&amp;rsquo;s IT â€” the results you can see below (Experiences we want to change!). Modern ways to build, test, and run IT systems are not adopted as broadly as possible. Hence, a lot of pain is still out there that we could ease by changing IT processes and utilizing the new ways.&lt;/p></description></item><item><title>New Ideas &amp; Concepts</title><link>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/new-idea-concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/new-idea-concepts/</guid><description>&lt;h3 id="new-ideas--concepts" class="heading-link">
 &lt;strong>New Ideas &amp;amp; Concepts&lt;/strong>
 &lt;a href="#new-ideas--concepts" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>As often in IT, great &amp;ldquo;new&amp;rdquo; ideas and concepts are recycled or borrowed from others. So it happened that the shipping industry was a big inspiration for optimizing IT infrastructure operations more than two decades ago.&lt;/p>
&lt;p>The concept of a container to standardize the packing of goods, make them universal to handle and transport on different means of transportation to improve efficiency and reduce the transportation costs was a real success story for the transportation industry.&lt;/p></description></item><item><title>Container Benefits</title><link>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/container-benefits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/container-benefits/</guid><description>&lt;h3 id="container-benefits" class="heading-link">
 &lt;strong>Container Benefits&lt;/strong>
 &lt;a href="#container-benefits" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>dev and ops separation of concerns&lt;/strong> create application container images at build/release time rather than deployment time, thereby decoupling applications from infrastructure&lt;/li>
&lt;/ul>
&lt;p>






&lt;div class="md__image">
 &lt;img id="[458 331 453 464 188 88]" src="https://cloud.layer5.io/academy/98e16360-a366-4b78-8e0a-031da07fdacb/intro-k8/benefit1.png" onclick="openModal(this.id)" alt="image" 
 class="md-image-responsive" />
&lt;/div>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>continuous development, integration, and deployment&lt;/strong> provides for reliable and frequent container image build and deployment with quick and efficient rollbacks â€“ due to image immutability&lt;/li>
&lt;/ul>
&lt;p>






&lt;div class="md__image">
 &lt;img id="[298 496 362 264 289 279]" src="https://cloud.layer5.io/academy/98e16360-a366-4b78-8e0a-031da07fdacb/intro-k8/benefit2.png" onclick="openModal(this.id)" alt="image" 
 class="md-image-responsive" />
&lt;/div>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>environmental consistency across dev, test, and prod&lt;/strong> runs the same on a laptop as it does on an on-premises server, virtualized server, and in the cloud&lt;/p></description></item><item><title>History of Application Deployments</title><link>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/history-of-deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cloud.layer5.io/academy/learning-paths/98e16360-a366-4b78-8e0a-031da07fdacb/intro-kubernetes/why-containers/content/history-of-deployment/</guid><description>&lt;h3 id="history-of-application-deployments" class="heading-link">
 &lt;strong>History of Application Deployments&lt;/strong>
 &lt;a href="#history-of-application-deployments" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h3>
&lt;p>






&lt;div class="md__image">
 &lt;img id="[105 50 17 368 2 178]" src="https://cloud.layer5.io/academy/98e16360-a366-4b78-8e0a-031da07fdacb/intro-k8/history.png" onclick="openModal(this.id)" alt="image" 
 class="md-image-responsive" />
&lt;/div>&lt;/p>

&lt;h4 id="traditional-deployment" class="heading-link">
 &lt;strong>Traditional Deployment&lt;/strong>
 &lt;a href="#traditional-deployment" class="heading-anchor" aria-label="Permalink to this heading">ðŸ”—&lt;/a>
&lt;/h4>
&lt;p>Early on, organizations ran applications on physical servers. There was no way to define resource boundaries for applications in a physical server, and this caused resource allocation issues. For example, if multiple applications run on a physical server, there can be instances where one application would take up most of the resources, and as a result, the other applications would underperform. A solution for this would be to run each application on a different physical server. But this did not scale as resources were underutilized, and it was expensive for organizations to maintain many physical servers.&lt;/p></description></item></channel></rss>