<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1. Why Containers? on Layer5 Academy</title>
    <link>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/</link>
    <description>Recent content in 1. Why Containers? on Layer5 Academy</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Experiences we want to change!</title>
      <link>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/experience-we-want-to-change/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/experience-we-want-to-change/</guid>
      <description>&lt;div class=&#34;chapter-content&#34;&gt;&#xA;  &lt;h2 class=&#34;chapter-sub-heading&#34;&gt;Why Containers?&lt;/h2&gt;&#xA;&lt;p&gt;Many people have a complex job building, testing, and running systems based on old concepts and technology in today&amp;rsquo;s IT — the results you can see below (Experiences we want to change!). Modern ways to build, test, and run IT systems are not adopted as broadly as possible. Hence, a lot of pain is still out there that we could ease by changing IT processes and utilizing the new ways.&lt;/p&gt;</description>
    </item>
    <item>
      <title>New Ideas &amp; Concepts</title>
      <link>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/new-ideas-and-concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/new-ideas-and-concepts/</guid>
      <description>&lt;div class=&#34;chapter-content&#34;&gt;&#xA;  &lt;h2 class=&#34;chapter-sub-heading&#34;&gt;New Ideas &amp; Concepts&lt;/h2&gt;&#xA;&lt;p&gt;As often in IT, great &amp;ldquo;new&amp;rdquo; ideas and concepts are recycled or borrowed from others. So it happened that the shipping industry was a big inspiration for optimizing IT infrastructure operations more than two decades ago.&lt;/p&gt;&#xA;&lt;p&gt;The concept of a container to standardize the packing of goods, make them universal to handle and transport on different means of transportation to improve efficiency and reduce the transportation costs was a real success story for the transportation industry.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Container Benefits</title>
      <link>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/container-benefits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/container-benefits/</guid>
      <description>&lt;div class=&#34;chapter-content&#34;&gt;&#xA;  &lt;h2 class=&#34;chapter-sub-heading&#34;&gt;Container Benefits&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;dev and ops separation of concerns&lt;/strong&gt; create application container images at build/release time rather than deployment time, thereby decoupling applications from infrastructure&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;image-container&#34; style=&#34;text-align: center; margin: 1rem 0;&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:9876/academy/images/learning-path/intro-kubernetes/containers/c1_l3_1.png&#34; alt=&#34;DevOps&#34;  style=&#34;width: 100%; border-radius: 0% !important;&#34;  data-modal=&#34;true&#34; onclick=&#34;openModal(this)&#34; /&gt;&#xA;  &lt;p&gt;DevOps&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;continuous development, integration, and deployment&lt;/strong&gt; provides for reliable and frequent container image build and deployment with quick and efficient rollbacks – due to image immutability&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;image-container&#34; style=&#34;text-align: center; margin: 1rem 0;&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:9876/academy/images/learning-path/intro-kubernetes/containers/c1_l3_2.png&#34; alt=&#34;Mutable vs Immutable&#34;  style=&#34;width: 100%; border-radius: 0% !important;&#34;  data-modal=&#34;true&#34; onclick=&#34;openModal(this)&#34; /&gt;&#xA;  &lt;p&gt;Mutable vs Immutable&lt;/p&gt;</description>
    </item>
    <item>
      <title>History of Application Deployments</title>
      <link>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/history_of_application_deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/containers/content/history_of_application_deployment/</guid>
      <description>&lt;div class=&#34;chapter-content&#34;&gt;&#xA;  &lt;h2 class=&#34;chapter-sub-heading&#34;&gt;History of Application Deployments&lt;/h2&gt;&#xA;&lt;div class=&#34;image-container&#34; style=&#34;text-align: center; margin: 1rem 0;&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:9876/academy/images/learning-path/intro-kubernetes/containers/c1_l4_1.png&#34; alt=&#34;Application Deployments&#34;  style=&#34;width: 100%; border-radius: 0% !important;&#34;  data-modal=&#34;true&#34; onclick=&#34;openModal(this)&#34; /&gt;&#xA;  &lt;p&gt;Application Deployments&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2 class=&#34;chapter-sub-heading&#34;&gt;Traditional Deployment&lt;/h2&gt;&#xA;&lt;p&gt;Early on, organizations ran applications on physical servers. There was no way to define resource boundaries for applications in a physical server, and this caused resource allocation issues. For example, if multiple applications run on a physical server, there can be instances where one application would take up most of the resources, and as a result, the other applications would underperform. A solution for this would be to run each application on a different physical server. But this did not scale as resources were underutilized, and it was expensive for organizations to maintain many physical servers.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
