<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>4. Kubernetes Building Blocks on Layer5 Academy</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/</link><description>Recent content in 4. Kubernetes Building Blocks on Layer5 Academy</description><generator>Hugo</generator><language>en</language><atom:link href="http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/index.xml" rel="self" type="application/rss+xml"/><item><title>Important Building Blocks</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/important-building-blocks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/important-building-blocks/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">Important Building Blocks&lt;/h2>
&lt;p>An application running on Kubernetes is a workload. Whether your workload is a single component or several that work together, on Kubernetes, you run it inside a set of Pods. In Kubernetes, a Pod represents a set of running containers on your cluster.&lt;/p>
&lt;p>A critical fault on the node where your Pod runs means that all the Pods on that node fail. Kubernetes treats that level of failure as final: you would need to create a new Pod to recover, even if the node later becomes healthy. However, to make life easier, you don&amp;rsquo;t need to manage each Pod directly.&lt;/p></description></item><item><title>PODs</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/pods/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">PODs&lt;/h2>
&lt;p>Pods are the basic building blocks to run containers inside of Kubernetes. Every Pod holds at least one container and controls the execution of that container. If all containers terminate, the Pod terminates too. Mounting storage, setting environment variables, and feed information into the container are all functions provided by the Pod.&lt;/p>
&lt;div class="image-container" style="text-align: center; margin: 1rem 0;">
 &lt;img src="http://localhost:9876/academy/images/learning-path/intro-kubernetes/kubernetes_building_blocks/c4_l2_1.png" alt="PODs" style="width: 100%; border-radius: 0% !important;" data-modal="true" onclick="openModal(this)" />
 &lt;p>PODs&lt;/p>
&lt;/div>
&lt;p>Pods are the smallest deployable units of computing that you can create and manage in Kubernetes. Pods in a Kubernetes cluster are used in two main ways:&lt;/p></description></item><item><title>REPLICASETs</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/replicasets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/replicasets/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">REPLICASETs&lt;/h2>
&lt;p>A ReplicaSet&amp;rsquo;s purpose is to maintain a stable set of replica Pods running at any given time to guarantee the availability of a specified number of identical Pods. However, a Deployment is a higher-level concept that manages ReplicaSets and provides declarative updates to Pods and other useful features. Therefore, Deployments are recommended instead of directly using ReplicaSets.&lt;/p>
&lt;div class="image-container" style="text-align: center; margin: 1rem 0;">
 &lt;img src="http://localhost:9876/academy/images/learning-path/intro-kubernetes/kubernetes_building_blocks/c4_l3_1.gif" alt="REPLICASETs" style="width: 100%; border-radius: 0% !important;" data-modal="true" onclick="openModal(this)" />
 &lt;p>REPLICASETs&lt;/p>
&lt;/div>

&lt;/div></description></item><item><title>DEAMONSETs</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/deamonsets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/deamonsets/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">DEAMONSETs&lt;/h2>
&lt;p>DaemonSets have many use cases â€“ one frequent pattern is to use DaemonSets to install or configure each host node. DaemonSets provide a way to ensure that a Pod copy is running on every node in the cluster. As a cluster grows and shrinks, the DaemonSet spreads these specially labelled Pods across all nodes.&lt;/p>
&lt;div class="image-container" style="text-align: center; margin: 1rem 0;">
 &lt;img src="http://localhost:9876/academy/images/learning-path/intro-kubernetes/kubernetes_building_blocks/c4_l4_1.gif" alt="DEAMONSETs" style="width: 100%; border-radius: 0% !important;" data-modal="true" onclick="openModal(this)" />
 &lt;p>DEAMONSETs&lt;/p>
&lt;/div>

&lt;/div></description></item><item><title>DEPLOYMENTs</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/deployments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/deployments/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">DEPLOYMENTs&lt;/h2>
&lt;p>A ReplicaSet&amp;rsquo;s purpose is to maintain a stable set of replica Pods running at any given time to guarantee the avaiA Deployment is a higher-order abstraction that controls deploying and maintaining a set of Pods. Behind the scenes, it uses a ReplicaSet to keep the Pods running, but it offers sophisticated logic for deploying, updating, and scaling a set of Pods within a cluster. Deployments support rollbacks and rolling updates. Rollouts can be paused if needed.&lt;/p></description></item><item><title>INGRESS</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/ingress/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/ingress/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">INGRESS&lt;/h2>
&lt;p>Route traffic to and from the cluster. Provide a single SSL endpoint for multiple applications. Many implementations of an ingress allow you to customize your platform. Ingresses provide a way to declare that they should channel traffic from the outside of the cluster into destination points within the cluster. One single external Ingress point can accept traffic destined to many internal services.&lt;/p>
&lt;div class="image-container" style="text-align: center; margin: 1rem 0;">
 &lt;img src="http://localhost:9876/academy/images/learning-path/intro-kubernetes/kubernetes_building_blocks/c4_l6_1.gif" alt="INGRESS" style="width: 100%; border-radius: 0% !important;" data-modal="true" onclick="openModal(this)" />
 &lt;p>INGRESS&lt;/p></description></item><item><title>CRONJOBs</title><link>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/cronjobs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://localhost:9876/academy/learning-paths/aabid/aabids-kubernetes-courcew/kubernetes-building-blocks/content/cronjobs/</guid><description>&lt;div class="chapter-content">
 &lt;h2 class="chapter-sub-heading">CRONJOBs&lt;/h2>
&lt;p>Use familiar &lt;strong>cron&lt;/strong> syntax to schedule tasks. CronJobs are part of the Batch API for creating short-lived non-server tools. CronJobs provide a method for scheduling the execution of Pods. They are excellent for running periodic tasks like backups, reports, and automated tests.&lt;/p>
&lt;div class="image-container" style="text-align: center; margin: 1rem 0;">
 &lt;img src="http://localhost:9876/academy/images/learning-path/intro-kubernetes/kubernetes_building_blocks/c4_l7_1.png" alt="CRONJOBs" style="width: 100%; border-radius: 0% !important;" data-modal="true" onclick="openModal(this)" />
 &lt;p>CRONJOBs&lt;/p>
&lt;/div>

&lt;/div></description></item></channel></rss>